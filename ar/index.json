[
{
	"uri": "https://qitmeer.github.io/docs/ar/reference/qxtools/",
	"title": "أدوات QX",
	"tags": [],
	"description": "",
	"content": "qx user guide qx is a command-line tool that is a superset of bx commands and provides a variety of commands for key management and transaction construction.\nPrerequisites Update Go to version at least 1.12 (required \u0026gt;= 1.12)\nCheck your golang version\n~ go version go version go1.12 darwin/amd64 How to build ~ mkdir -p /tmp/work ~ cd /tmp/work ~ git clone https://github.com/Qitmeer/qx.git ~ cd qx ~ go build ~ ./qx --version Qx Version : \u0026#34;0.0.1\u0026#34; qx Commands ~ qx Usage: qx [--version] [--help] \u0026lt;command\u0026gt; [\u0026lt;args\u0026gt;] encode and decode : base58-encode encode a base16 string to a base58 string base58-decode decode a base58 string to a base16 string base58check-encode encode a base58check string base58check-decode decode a base58check string base64-encode encode a base16 string to a base64 string base64-encode encode a base64 string to a base16 string rlp-encode encode a string to a rlp encoded base16 string rlp-decode decode a rlp base16 string to a human-readble representation hash : blake2b256 calculate Blake2b 256 hash of a base16 data. blake2b512 calculate Blake2b 512 hash of a base16 data. sha256 calculate SHA256 hash of a base16 data. sha3-256 calculate SHA3 256 hash of a base16 data. keccak-256 calculate legacy keccak 256 hash of a bash16 data. blake256 calculate blake256 hash of a base16 data. ripemd160 calculate ripemd160 hash of a base16 data. bitcion160 calculate ripemd160(sha256(data)) hash160 calculate ripemd160(blake2b256(data)) entropy (seed) \u0026amp; mnemoic \u0026amp; hd \u0026amp; ec entropy generate a cryptographically secure pseudorandom entropy (seed) hd-new create a new HD(BIP32) private key from an entropy (seed) hd-to-ec convert the HD (BIP32) format private/public key to a EC private/public key hd-to-public derive the HD (BIP32) public key from a HD private key hd-decode decode a HD (BIP32) private/public key serialization format hd-derive Derive a child HD (BIP32) key from another HD public or private key. mnemonic-new create a mnemonic world-list (BIP39) from an entropy mnemonic-to-entropy return back to the entropy (the random seed) from a mnemonic world list (BIP39) mnemonic-to-seed convert a mnemonic world-list (BIP39) to its 512 bits seed ec-new create a new EC private key from an entropy (seed). ec-to-public derive the EC public key from an EC private key (the compressed format by default ) ec-to-wif convert an EC private key to a WIF, associates with the compressed public key by default. wif-to-ec convert a WIF private key to an EC private key. wif-to-public derive the EC public key from a WIF private key. addr \u0026amp; tx \u0026amp; sign ec-to-addr convert an EC public key to a paymant address. default is nox address tx-encode encode a unsigned transaction. tx-decode decode a transaction in base16 to json format. tx-sign sign a transactions using a private key. msg-sign create a message signature msg-verify validate a message signature signature-decode decode a ECDSA signature Encoding Commands Encode/Decocde Qitmeer address \u0026amp; private/pubkey\nbase58-encode  encode a base16 string to a base58 string  Example ~ qx base58-decode RmCYoUMqKZopUkai2YhUFHR9UeqjeyjTAgW # base16 string 0df144d959afb6db4ad730a6e2c0daf46ceeb98c53a059cd6527  base58-decode  decode a base58 string to a base16 string  Example ~ qx base58-decode 1234567890abcdef # base58 string 43c9JGZmRvE  base58check-encode  base16 string into Qitmeer or BTC address.  ~ qx base58check-encode Usage: qx base58check-encode [-v \u0026lt;ver\u0026gt;] [hexstring] -a string base58check hasher -c int base58check checksum size (default 4) -v version base58check version [mainnet|testnet|privnet|btcmainnet|btctestnet|btcregressionnet] (default privnet) Example # create qitmeer privnet address by base16 ~ qx base58check-encode c1c3092d17c917c2799c041aeaeac18822772149 # base58 string RmPwHCuC2m6gvz9TnVLapHySk1ZU72FTSru # create btc testnet address by base16 ~ qx base58check-encode -v btctestnet c1c3092d17c917c2799c041aeaeac18822772149 # base58 string myBUMQTmZGK8yKLDranjSQEHbCYCaaywQD "
},
{
	"uri": "https://qitmeer.github.io/docs/ar/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://qitmeer.github.io/docs/ar/",
	"title": "Qitmeer وثائق تقنية",
	"tags": [],
	"description": "",
	"content": "Qitmeer دليل المستندات التقنية  Qitmeer/Meer دليل التطوير الكامل للوثائق\nقائمة الملفات  Qx Tools: QX هي أداة إصدار الأوامر، وهي مجموعة فائقة من الأوامر BX توفر مجموعة متنوعة من الأوامر لإدارة المفاتيح وبناء الخدمات.  "
},
{
	"uri": "https://qitmeer.github.io/docs/ar/reference/",
	"title": "References",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://qitmeer.github.io/docs/ar/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]